--- a/lib/app/pages/exam/exam_controller.dart
+++ b/lib/app/pages/exam/exam_controller.dart
@@ -1,3 +1,4 @@
+import 'dart:async';
 import 'package:flutter_clean_architecture/flutter_clean_architecture.dart';
 import 'package:poteu/data/repositories/cloud_exam_repository.dart';
 import 'package:poteu/domain/entities/exam_question.dart';
@@ -16,6 +17,9 @@
   final Map<int, Set<String>> _userAnswers = {};
   bool _showResults = false;
 
+  Timer? _timer;
+  int _timeRemainingInSeconds = 0;
+
   // Getters
   bool get isLoading => _isLoading;
   String? get error => _error;
@@ -28,6 +32,7 @@
   String? get selectedGroup => _selectedGroup;
   Map<int, Set<String>> get userAnswers => _userAnswers;
   bool get showResults => _showResults;
+  int get timeRemainingInSeconds => _timeRemainingInSeconds;
 
   ExamController(this.regulationId)
       : _presenter = ExamPresenter(CloudExamRepository()) {
@@ -56,8 +61,28 @@
     if (_examQuestions.length > 10) {
       _examQuestions = _examQuestions.take(10).toList();
     }
+    _startTimer();
     refreshUI();
   }
 
+  void _startTimer() {
+    _timer?.cancel();
+    _timeRemainingInSeconds = _examQuestions.length * 60; // 1 minute per question
+    _timer = Timer.periodic(const Duration(seconds: 1), (timer) {
+      if (_timeRemainingInSeconds > 0) {
+        _timeRemainingInSeconds--;
+        refreshUI();
+      } else {
+        _onTimeExpired();
+      }
+    });
+  }
+
+  void _onTimeExpired() {
+    _timer?.cancel();
+    _showResults = true;
+    refreshUI();
+  }
+
   void toggleAnswerSelection(String answer) {
     if (isConfirmed) return;
 
@@ -88,12 +113,14 @@
       _selectedAnswers.clear();
       refreshUI();
     } else {
+      _timer?.cancel();
       _showResults = true;
       refreshUI();
     }
   }
 
   void restartExam() {
+    _timer?.cancel();
     _isLoading = true;
     _error = null;
     _allQuestions = [];
@@ -124,6 +151,7 @@
 
   @override
   void onDisposed() {
+    _timer?.cancel();
     _presenter.dispose();
     super.onDisposed();
   }
 }
 
--- a/lib/app/pages/exam/exam_view.dart
+++ b/lib/app/pages/exam/exam_view.dart
@@ -36,7 +36,10 @@
                     style: Theme.of(context).appBarTheme.titleTextStyle,
                     textAlign: TextAlign.center,
                   ),
                 ),
-                const SizedBox(width: 48), // Balance the back button
+                if (controller.selectedGroup != null && !controller.showResults)
+                  _buildTimer(context, controller)
+                else
+                  const SizedBox(width: 48), // Balance the back button
               ],
             ),
           ),
@@ -81,6 +84,26 @@
     );
   }
 
+  Widget _buildTimer(BuildContext context, ExamController controller) {
+    final duration = Duration(seconds: controller.timeRemainingInSeconds);
+    final minutes = duration.inMinutes.toString().padLeft(2, '0');
+    final seconds = (duration.inSeconds % 60).toString().padLeft(2, '0');
+    final isRunningLow = duration.inSeconds < 60;
+
+    return SizedBox(
+      width: 60,
+      child: Text(
+        '$minutes:$seconds',
+        style: Theme.of(context).appBarTheme.titleTextStyle?.copyWith(
+              color: isRunningLow
+                  ? Colors.red
+                  : Theme.of(context).appBarTheme.titleTextStyle?.color,
+            ),
+        textAlign: TextAlign.center,
+      ),
+    );
+  }
+
   Widget _buildQuestionView(ExamController controller) {
     final question = controller.currentQuestion!;
     return SingleChildScrollView(
