diff --git a/lib/app/pages/notes/notes_controller.dart b/lib/app/pages/notes/notes_controller.dart
index 034177c..091157c 100644
--- a/lib/app/pages/notes/notes_controller.dart
+++ b/lib/app/pages/notes/notes_controller.dart
@@ -29,6 +29,9 @@
   bool _isSelectionMode = false;
   final Set<Note> _selectedNotes = {};
 
+  Note? _lastDeletedNote;
+  int? _lastDeletedNoteIndex;
+
   // Getters
   List<Note> get notes => _notes;
   bool get isLoading => _isLoading;
@@ -89,18 +92,38 @@
     await _loadNotes();
   }
 
-  Future<void> deleteNote(Note note) async {
+  void deleteNote(Note note) {
+    _lastDeletedNoteIndex = _notes.indexOf(note);
+    if (_lastDeletedNoteIndex == -1) return;
+
+    _lastDeletedNote = _notes.removeAt(_lastDeletedNoteIndex!);
+    refreshUI();
+  }
+
+  void undoDelete() {
+    if (_lastDeletedNote != null && _lastDeletedNoteIndex != null) {
+      _notes.insert(_lastDeletedNoteIndex!, _lastDeletedNote!);
+      _lastDeletedNote = null;
+      _lastDeletedNoteIndex = null;
+      refreshUI();
+    }
+  }
+
+  void confirmDelete() {
+    if (_lastDeletedNote == null) return;
+
     dev.log('=== DELETE NOTE ===');
-    dev.log('Deleting note: ${note.link.text}');
+    dev.log('Deleting note: ${_lastDeletedNote!.link.text}');
 
     try {
       _deleteNoteUseCase.execute(
         _DeleteNoteObserver(this),
-        DeleteNoteParams(note: note),
+        DeleteNoteParams(note: _lastDeletedNote!),
       );
+      _lastDeletedNote = null;
+      _lastDeletedNoteIndex = null;
     } catch (e) {
       dev.log('Error deleting note: $e');
       _error = 'Ошибка удаления заметки';
       refreshUI();
     }
   }
@@ -161,8 +184,7 @@
 
   void _onNoteDeleted() {
     dev.log('=== NOTE DELETED ===');
-    // Reload notes after successful deletion
-    _loadNotes();
+    // The note is already removed from the UI. No need to reload.
   }
 
   void _onDeleteError(dynamic error) {
diff --git a/lib/app/pages/notes/notes_view.dart b/lib/app/pages/notes/notes_view.dart
index 9582888..7416738 100644
--- a/lib/app/pages/notes/notes_view.dart
+++ b/lib/app/pages/notes/notes_view.dart
@@ -213,7 +213,24 @@
               // Delete button
               if (!controller.isSelectionMode)
                 GestureDetector(
-                  onTap: () => _showDeleteConfirmation(note, controller),
+                  onTap: () {
+                    final noteToDelete = note;
+                    controller.deleteNote(noteToDelete);
+                    ScaffoldMessenger.of(context).showSnackBar(
+                      SnackBar(
+                        content: const Text('Заметка удалена'),
+                        action: SnackBarAction(
+                          label: 'ОТМЕНИТЬ',
+                          onPressed: () {
+                            controller.undoDelete();
+                          },
+                        ),
+                      ),
+                    ).closed.then((reason) {
+                      if (reason != SnackBarClosedReason.action) {
+                        controller.confirmDelete();
+                      }
+                    });
+                  },
                   child: Icon(
                     Icons.close,
                     color: Theme.of(context).textTheme.bodyLarge!.color,
@@ -330,57 +347,6 @@
     );
   }
 
-  void _showDeleteConfirmation(Note note, NotesController controller) {
-    showDialog(
-      context: context,
-      builder: (context) => AlertDialog(
-        backgroundColor: Theme.of(context).scaffoldBackgroundColor,
-        title: Text(
-          'Удалить заметку?',
-          style: TextStyle(
-            color: Theme.of(context).textTheme.bodyLarge!.color,
-            fontSize: 18,
-            fontWeight: FontWeight.w600,
-          ),
-        ),
-        content: Text(
-          'Вы уверены, что хотите удалить заметку "${note.link.text}"?',
-          style: TextStyle(
-            color: Theme.of(context).textTheme.bodyLarge!.color,
-            fontSize: 16,
-          ),
-        ),
-        shape: RoundedRectangleBorder(
-          borderRadius: BorderRadius.circular(10),
-        ),
-        actions: [
-          TextButton(
-            onPressed: () => Navigator.pop(context),
-            child: Text(
-              'Отмена',
-              style: TextStyle(
-                color: Theme.of(context).textTheme.bodyLarge!.color,
-                fontSize: 16,
-              ),
-            ),
-          ),
-          TextButton(
-            onPressed: () async {
-              Navigator.pop(context);
-              await controller.deleteNote(note);
-              if (controller.error != null) {
-                _showErrorSnackBar(controller.error!);
-              } else {
-                _showSnackBar('Заметка удалена');
-              }
-            },
-            child: Text(
-              'Удалить',
-              style: TextStyle(
-                color: Theme.of(context).colorScheme.primary,
-                fontSize: 16,
-              ),
-            ),
-          ),
-        ],
-      ),
-    );
-  }
-
   void _showSnackBar(String message) {
     ScaffoldMessenger.of(context).showSnackBar(
       SnackBar(