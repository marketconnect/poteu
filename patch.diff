diff --git a/app/pages/chapter/chapter_view.dart b/app/pages/chapter/chapter_view.dart
index 2411929..592c730 100644
--- a/app/pages/chapter/chapter_view.dart
+++ b/app/pages/chapter/chapter_view.dart
@@ -1,4 +1,5 @@
 import 'dart:developer' as dev;
+import 'dart:async';
 
 import 'package:flutter/material.dart' hide View;
 import 'package:sentry_flutter/sentry_flutter.dart';
@@ -1510,19 +1511,28 @@
 
 class _SearchScreenState extends State<_SearchScreen> {
   final TextEditingController _searchController = TextEditingController();
+  Timer? _debounce;
 
   @override
   void initState() {
     super.initState();
     _searchController.addListener(() {
-      widget.controller.search(_searchController.text);
+      if (_debounce?.isActive ?? false) {
+        _debounce!.cancel();
+      }
+      _debounce = Timer(const Duration(milliseconds: 500), () {
+        if (mounted) {
+          widget.controller.search(_searchController.text);
+        }
+      });
     });
   }
 
   @override
   void dispose() {
+    _debounce?.cancel();
     _searchController.dispose();
     super.dispose();
   }
 
   @override
diff --git a/app/pages/search/search_controller.dart b/app/pages/search/search_controller.dart
index 2873a4a..0317e0b 100644
--- a/app/pages/search/search_controller.dart
+++ b/app/pages/search/search_controller.dart
@@ -62,7 +62,7 @@
   void search() {
     if (_debounceTimer?.isActive ?? false) _debounceTimer?.cancel();
 
-    _debounceTimer = Timer(const Duration(milliseconds: 300), () async {
+    _debounceTimer = Timer(const Duration(milliseconds: 500), () async {
       if (_searchController.text.isEmpty) {
         _searchResults = [];
         refreshUI();